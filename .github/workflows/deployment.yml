
name: Deployment

on: [push, pull_request]

jobs:
  build-generator:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }} # hash poms
        restore-keys: ${{ runner.os }}-m2

    - name: Standard compile
      run: mvn compile

    - name: Set up ant packaging
      run: ./pre-ant.sh
      shell: bash
      working-directory: ./dist/generator

    - name: Ant packaging
      run: ant -f antpack.xml
      working-directory: ./dist/generator

    - name: Store cli jar artifact
      uses: actions/upload-artifact@v1
      with:
        name: logic-compiler  # name of the artifact
        path: dist/generator/logic-compiler.jar

  build-web:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }} # hash poms
        restore-keys: ${{ runner.os }}-m2

    - name: Standard compile
      run: mvn compile

    - name: Set up ant packaging
      run: ./pre-ant.sh
      shell: bash
      working-directory: ./dist/web

    - name: Ant packaging
      run: ant -f antpack.xml
      working-directory: ./dist/web

    - name: Prep upload
      run: |
        mkdir -p output 
        mv logic-webserver.jar src/ output/
      working-directory: ./dist/web

    - name: Store web jar and public dir as artifact
      uses: actions/upload-artifact@v1
      with:
        name: logic-webserver  # name of the artifact
        path: dist/web/output

  docker-web:
    needs: [build-generator, build-web]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Pull in artifacts from build jobs
      uses: actions/download-artifact@v2
      with:
        path: dist/

    - name: Docker login
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Docker Buildx setup
      uses: docker/setup-buildx-action@v1

    - name: Build and push (dev)
      if: github.ref != 'refs/heads/master'
      uses: docker/build-push-action@v2
      with:
        context: dist/
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_PATH }}:dev

    - name: Build and push (master)
      if: github.ref == 'refs/heads/master'
      uses: docker/build-push-action@v2
      with:
        context: dist/
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_PATH }}:latest ${{ secrets.DOCKER_HUB_PATH }}:stable

